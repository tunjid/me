get:
SELECT *
FROM archiveEntity
WHERE id = :id;

find:
SELECT *
FROM archiveEntity
WHERE kind = :kind
AND CASE WHEN :useFilters
         THEN id IN (
                     SELECT DISTINCT innerArchiveEntity.id
                     FROM archiveEntity AS innerArchiveEntity
                     INNER JOIN archiveTag
                     ON innerArchiveEntity.id = archiveTag.archive_id
                     INNER JOIN archiveCategory
                     ON innerArchiveEntity.id = archiveCategory.archive_id
                     WHERE (archiveTag.tag IN :tagsOrCategories OR archiveCategory.category IN :tagsOrCategories)
                     )
        ELSE 1
    END
ORDER BY CASE WHEN :desc
              THEN created
              ELSE (-1 * created)
              END DESC
LIMIT :limit
OFFSET :offset;

count:
SELECT COUNT(*)
FROM archiveEntity
WHERE kind = :kind
AND CASE WHEN :useFilters
         THEN id IN (
                     SELECT DISTINCT innerArchiveEntity.id
                     FROM archiveEntity AS innerArchiveEntity
                     INNER JOIN archiveTag
                     ON innerArchiveEntity.id = archiveTag.archive_id
                     INNER JOIN archiveCategory
                     ON innerArchiveEntity.id = archiveCategory.archive_id
                     WHERE (archiveTag.tag IN :tagsOrCategories OR archiveCategory.category IN :tagsOrCategories)
                     )
        ELSE 1
    END;

idsForQuery:
SELECT DISTINCT archiveEntity.id
FROM archiveEntity
INNER JOIN archiveTag
ON archiveEntity.id = archiveTag.archive_id
INNER JOIN archiveCategory
ON archiveEntity.id = archiveCategory.archive_id
WHERE kind = :kind
AND (archiveTag.tag IN :tagsOrCategories OR archiveCategory.category IN :tagsOrCategories)
ORDER BY created DESC
LIMIT :limit
OFFSET :offset;

archivesForIds:
SELECT *
FROM archiveEntity
WHERE id IN :ids;

insertOrIgnore:
INSERT OR IGNORE INTO archiveEntity
VALUES ?;

upsert:
INSERT INTO archiveEntity
VALUES ?
ON CONFLICT(id) DO UPDATE SET
    link=excluded.link,
    title=excluded.title,
    description=excluded.description,
    body=excluded.body,
    thumbnail=excluded.thumbnail,
    videoUrl=excluded.videoUrl,
    likes=excluded.likes,
    author=excluded.author,
    created=excluded.created,
    kind=excluded.kind;

delete:
DELETE FROM archiveEntity
WHERE id = :id;
